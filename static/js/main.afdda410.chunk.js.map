{"version":3,"sources":["components/PhoneBook/PhoneBook.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["PfoneBook","state","name","props","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","onAddContact","this","onSubmit","className","type","placeholder","onChange","required","Component","defaultProps","Contactlist","contacts","onDeleteContact","map","id","key","onClick","ContactFilter","onChangeFilter","Section","title","children","Notification","message","App","filter","addContact","contactName","prevState","some","newContact","uuid","alert","deleteContact","contactId","changeFilter","getFilteredContacts","contact","toLowerCase","includes","filteredContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afdda410.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PfoneBook extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    handleInputChange: PropTypes.func,\r\n    handleSubmit: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: this.props.name,\r\n    number: this.props.number,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className=\"TaskEditor-label\">\r\n            Name\r\n            <input\r\n              className=\"TaskEditor-input\"\r\n              type=\"text\"\r\n              placeholder=\"Enter user name*\"\r\n              value={name}\r\n              onChange={this.handleInputChange}\r\n              name=\"name\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className=\"TaskEditor-label\">\r\n            Number\r\n            <input\r\n              className=\"TaskEditor-input\"\r\n              type=\"text\"\r\n              placeholder=\"Enter user phone*\"\r\n              value={number}\r\n              onChange={this.handleInputChange}\r\n              name=\"number\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"TaskEditor-button\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contactlist = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id}>\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button type=\"submit\" onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactlist.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default Contactlist;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search contacts by name*\"\r\n        value={value}\r\n        onChange={({ target }) => onChangeFilter(target.value)}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Phonebook from './PhoneBook';\r\nimport Contactlist from './ContactList';\r\nimport ContactFilter from './ContactFilter';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\nimport { uuid } from 'uuidv4';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class App extends Component {\r\n  static defaultProps = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.array,\r\n    filter: PropTypes.string,\r\n    addContact: PropTypes.func,\r\n    deleteContact: PropTypes.func,\r\n    changeFilter: PropTypes.func,\r\n    getFilteredContacts: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    contacts: this.props.contacts,\r\n    filter: this.props.filter,\r\n  };\r\n\r\n  addContact = (contactName, number) => {\r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n\r\n      if (contacts.some(({ name }) => name === contactName)) {\r\n        alert(`${contactName} is already in contacts`);\r\n      } else {\r\n        const newContact = {\r\n          id: uuid(),\r\n          name: contactName,\r\n          number,\r\n        };\r\n        return {\r\n          contacts: [...prevState.contacts, newContact],\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n\r\n      return {\r\n        contacts: contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <Phonebook onAddContact={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && (\r\n            <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\r\n          )}\r\n          {contacts.length < 1 ? (\r\n            <Notification message=\"There is no contact yet...\" />\r\n          ) : (\r\n            <Contactlist\r\n              contacts={filteredContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}